---
title: "Project: ROS Immersion"
---
#### Intro
ROS is quite complicated to get up and running, and to really understand. This is a warmup project which will allow students to really get familiar with it in a hands-on manner.

#### Learning Objectives
* Install ROS on your computer and demonstrate operation
* Write a simple example program with ROS and run in simulator
* Understanding the role and purpose of nodes, topics, commands and services
* Understanding the key components and utilities: ROSCORE, ROSTOPICS
* Ability to write and run ROS Nodes
* Join the community


#### PART ONE - One Small Step
* Get Ubuntu ready and install ROS on your computer, FOLLOW EXACTLY [THIS](http://turtlebot3.robotis.com/en/latest/introduction.html).
* Use gazebo simulator to view the robot in a simulated world.
* Use teleop to drive around the robot.
* See what it does and try to record a video (with whatever techniques).
* Read [ROS concept](http://campusrover.org.s3-website-us-west-2.amazonaws.com/content/fundamentals/04_ros_concepts.md/) and chapter 4 of the textbook carefully.
* Watch and follow the recommended youtube tutorials in ROS concept. 

#### PART TWO - Please Subscribe
* First thing first: Sign up a ROS answer account. [Join the community.](http://answers.ros.org/questions/)
* In part One, you learned about how to try around the simulated robot, in this part you are going to explore the idea of "Node".
* Write a node that subscribes the location(hint: use command rostopic list to see what you can subscribe) of the monitor and print out the result with ROS_INFO.

#### PART THREE - Random walk
* With the code you write before. Now try to publish a message.
* Publish twist messages to make the robot walk randomly.

#### PART FOUR - Do It Yourself
* With the knowledge of Subscriber and Publisher, write your version of teleop.
* Advanced: make a gui teleop. You can start from here: https://github.com/rozoalex/ROS_NavigationControlPanel/blob/master/scripts/location_monitor_node.py


#### Steps

1. Acquire and read the first 7 Chapters of [Programming Robots with ROS](https://www.amazon.com/Programming-Robots-ROS-Practical-Introduction/dp/1449323898)
1. Install [TurtleBot3 ROS packages ](http://turtlebot3.robotis.com/en/latest/) on your Ubuntu computer. In the likely event that you don't have an Ubuntu, we have tested the way to get things up and running on either Mac or Windows: <%= link_to_background :ros_install %>. Whatever you do **Don't try and install ROS on Mac or Windows**. It will make you sad.
1. Write and get to run the WanderBot example from the book
1. Continue reading through Chapter 8, and do as many of the examples as you can
1. Run the similators and move the TB3 with teleop
1. Write a ROS program to have the robot drive around one of the obstacles in the simulator


<iframe width="560" height="315" src="https://www.youtube.com/embed/ml_pgbPEIz8" frameborder="0" allowfullscreen></iframe>
