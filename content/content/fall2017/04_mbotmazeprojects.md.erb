---
title: mBot Maze Runner Project
---
#### Requirements
* A maze drawn on a white paper
* We will have three mazes
  * A trivial one
  * A more complicated one, without cycles
  * A more complicated one, WITH cycles
* Maze is drawn with black electrical tape
* Levels of achievement
    * Level 1: Doesn't drive off the end of the table
    * Level 2: Actually completes the maze
    * Level 3: Best Time
  * Important:
    * Reliability / reproducability
    * Clean code
  * Extra:
    * deal with cycles
    * is there a way to write test cases
    * is there a way to tune your algorithm on "virtual maze"?

##### Useful background
* [Line Maze Algorithm](http://www.richardvannoy.info/line-maze-algorithm.pdf)

<%= include_image "/content/images/linemazes.jpg" %>

#### Team Deliverables
* Demo the robot, on white paper with black lines, solve a maze
* Write a summary report on your project
* Create a new github repository with your code
* Your code should be professional, well structured, short methods, some abstraction, as you are able.
* Your summary report can be the readme for the github repo

#### Notes for next year
* Parameters:
  * Practice Mazes
  * How wide is the tape?
  * No turned up edges of paper
  * Minimum distance of maze to edge of paper
  * How big is the landing square?
  * Minimum distance between intersections (min = length of robot)
  * What is the minimum space representing any kind of gap?
  * Give each team sensor-identical mBot
